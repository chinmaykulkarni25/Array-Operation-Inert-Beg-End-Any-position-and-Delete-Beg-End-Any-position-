#include <stdio.h>

#define MAX 100
void display(int arr[], int n) {
    printf("Array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

void insertAtBeginning(int arr[], int *n, int element) {
    if (*n >= MAX) {
        printf("Array is full.\n");
        return;
    }
     for (int i = *n; i > 0; i--) {
        arr[i] = arr[i - 1];
    }
    arr[0] = element; // Insert at index 0
    (*n)++; // Increase the size
}


void insertAtEnd(int arr[], int *n, int element) {
    if (*n >= MAX) {
        printf("Array is full.\n");
        return;
    }
    arr[*n] = element; // Insert at the last position
    (*n)++;
}

void insertAtPosition(int arr[], int *n, int element, int pos) {
    if (*n >= MAX) {
        printf("Array is full.\n");
        return;
    }
    if (pos < 0 || pos > *n) {
        printf("Invalid position.\n");
        return;
    }
     for (int i = *n; i > pos; i--) {
        arr[i] = arr[i - 1];
    }
    arr[pos] = element;
    (*n)++;
}


void deleteAtBeginning(int arr[], int *n) {
    if (*n == 0) {
        printf("Array is empty.\n");
        return;
    }
      for (int i = 0; i < *n - 1; i++) {
        arr[i] = arr[i + 1];
    }
    (*n)--; // Decrease the size
}

void deleteAtEnd(int arr[], int *n) {
    if (*n == 0) {
        printf("Array is empty.\n");
        return;
    }
    (*n)--; // Just reduce the size
}

// Delete from any position
void deleteAtPosition(int arr[], int *n, int pos) {
    if (*n == 0) {
        printf("Array is empty.\n");
        return;
    }
    if (pos < 0 || pos >= *n) {
        printf("Invalid position.\n");
        return;
    }
    // Shift elements to the left from the given position
    for (int i = pos; i < *n - 1; i++) {
        arr[i] = arr[i + 1];
    }
    (*n)--; // Decrease the size
}

int main() {
    int arr[MAX]; // Array to store elements
    int n = 0; // Number of elements
    int choice, element, position;

    while (1) {
        printf("\n1. Insert at Beginning\n2. Insert at End\n3. Insert at Position\n");
        printf("4. Delete at Beginning\n5. Delete at End\n6. Delete at Position\n7. Display\n8. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter element to insert: ");
                scanf("%d", &element);
                insertAtBeginning(arr, &n, element);
                break;

            case 2:
                printf("Enter element to insert: ");
                scanf("%d", &element);
                insertAtEnd(arr, &n, element);
                break;

            case 3:
                printf("Enter element to insert: ");
                scanf("%d", & element);
                printf("Enter position to insert (0 to %d): ", n);
                scanf("%d", &position);
                insertAtPosition(arr, &n, element, position);
                break;

            case 4:
                deleteAtBeginning(arr, &n);
                break;

            case 5:
                deleteAtEnd(arr, &n);
                break;

            case 6:
                printf("Enter position to delete (0 to %d): ", n - 1);
                scanf("%d", &position);
                deleteAtPosition(arr, &n, position);
                break;

            case 7:
                display(arr, n);
                break;

            case 8:
                return 0;

            default:
                printf("Invalid choice.\n");
        }
    }
    return 0;
}

